#Greeting
print(format("~","~>35"))
print(format("Welcome to Treasure Hunt!","~^35"))
print(format("~","~>35"))
print("")

import random
#Getting 3 random locations on the easymap and defining hidden_easy
location1=random.randint(0,8)

location2=location1
while location2==location1:
    location2=random.randint(0,8)

location3=location1
while location3==location1 or location3==location2:
    location3=random.randint(0,8)

loc1row=location1//3
loc1col=location1%3
loc2row=location2//3
loc2col=location2%3
loc3row=location3//3
loc3col=location3%3

hidden_easy=[["O","O","O"],["O","O","O"],["O","O","O"]]
hidden_easy[loc1row][loc1col]=chr(9818)
hidden_easy[loc2row][loc2col]=chr(9818)
hidden_easy[loc3row][loc3col]=chr(9818)

#Getting 4 random locations on the mediummap and defining hidden_medium
location1=random.randint(0,15)

location2=location1
while location2==location1:
    location2=random.randint(0,15)

location3=location1
while location3==location1 or location3==location2:
    location3=random.randint(0,15)

location4=location1
while location4==location1 or location4==location2 or location4==location3:
    location4=random.randint(0,15)

loc1row=location1//4
loc1col=location1%4
loc2row=location2//4
loc2col=location2%4
loc3row=location3//4
loc3col=location3%4
loc4row=location4//4
loc4col=location4%4

hidden_medium=[["O","O","O","O"],["O","O","O","O"],["O","O","O","O"],["O","O","O","O"]]
hidden_medium[loc1row][loc1col]=chr(9818)
hidden_medium[loc2row][loc2col]=chr(9818)
hidden_medium[loc3row][loc3col]=chr(9818)
hidden_medium[loc4row][loc4col]=chr(9818)

#Getting 5 random locations on the mediummap and defining hidden_hard
location1=random.randint(0,24)

location2=location1
while location2==location1:
    location2=random.randint(0,24)

location3=location1
while location3==location1 or location3==location2:
    location3=random.randint(0,24)

location4=location1
while location4==location1 or location4==location2 or location4==location3:
    location4=random.randint(0,24)

location5=location1
while location5==location1 or location5==location2 or location5==location3 or location5==location4:
    location5=random.randint(0,24)

loc1row=location1//5
loc1col=location1%5
loc2row=location2//5
loc2col=location2%5
loc3row=location3//5
loc3col=location3%5
loc4row=location4//5
loc4col=location4%5
loc5row=location5//5
loc5col=location5%5

hidden_hard=[["O","O","O","O","O"],["O","O","O","O","O"],["O","O","O","O","O"],["O","O","O","O","O"],["O","O","O","O","O"]]
hidden_hard[loc1row][loc1col]=chr(9818)
hidden_hard[loc2row][loc2col]=chr(9818)
hidden_hard[loc3row][loc3col]=chr(9818)
hidden_hard[loc4row][loc4col]=chr(9818)
hidden_hard[loc5row][loc5col]=chr(9818)

#Format for the Teasure hunt game
#3X3
def EASY():
    print(format('', ' ^3'), format('1', ' ^1'), format('', ' ^3'), format('2', ' ^1'), format('', ' ^3'), format('3', ' ^1'), sep = '')
    print(format('A ', ' ^1'), format('[', ' ^1'), format(Easy[0][0], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Easy[0][1], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Easy[0][2], ' ^1'), format(']', ' ^1'), format('', ' ^1'), sep='')
    print(format('B ', ' ^1'), format('[', ' ^1'), format(Easy[1][0], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Easy[1][1], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Easy[1][2], ' ^1'), format(']', ' ^1'), format('', ' ^1'), sep='')
    print(format('C ', ' ^1'), format('[', ' ^1'), format(Easy[2][0], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Easy[2][1], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Easy[2][2], ' ^1'), format(']', ' ^1'), format('', ' ^1'), sep='')

#4X4
def MEDIUM():
    print(format('', ' ^3'), format('1', ' ^1'), format('', ' ^3'), format('2', ' ^1'), format('', ' ^3'), format('3', ' ^1'), format('', ' ^3'), format('4', ' ^1'), sep = '')
    print(format('A ', ' ^1'), format('[', ' ^1'), format(Medium[0][0], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Medium[0][1], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Medium[0][2], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Medium[0][3], ' ^1'), format(']', ' ^1'), format('', ' ^1'), sep='')
    print(format('B ', ' ^1'), format('[', ' ^1'), format(Medium[1][0], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Medium[1][1], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Medium[1][2], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Medium[1][3], ' ^1'), format(']', ' ^1'), format('', ' ^1'), sep='')
    print(format('C ', ' ^1'), format('[', ' ^1'), format(Medium[2][0], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Medium[2][1], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Medium[2][2], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Medium[2][3], ' ^1'), format(']', ' ^1'), format('', ' ^1'), sep='')
    print(format('D ', ' ^1'), format('[', ' ^1'), format(Medium[3][0], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Medium[3][1], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Medium[3][2], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Medium[3][3], ' ^1'), format(']', ' ^1'), format('', ' ^1'), sep='')

#5X5
def HARD():
    print(format('', ' ^3'), format('1', ' ^1'), format('', ' ^3'), format('2', ' ^1'), format('', ' ^3'), format('3', ' ^1'), format('', ' ^3'), format('4', ' ^1'), format('', ' ^3'), format('5',' ^1'), sep = '')
    print(format('A ', ' ^1'), format('[', ' ^1'), format(Hard[0][0], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[0][1], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[0][2], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[0][3], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[0][4], ' ^1'), format(']', ' ^1'), format('', ' ^1'), sep='')
    print(format('B ', ' ^1'), format('[', ' ^1'), format(Hard[1][0], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[1][1], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[1][2], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[1][3], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[1][4], ' ^1'), format(']', ' ^1'), format('', ' ^1'), sep='')
    print(format('C ', ' ^1'), format('[', ' ^1'), format(Hard[2][0], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[2][1], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[2][2], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[2][3], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[2][4], ' ^1'), format(']', ' ^1'), format('', ' ^1'), sep='')
    print(format('D ', ' ^1'), format('[', ' ^1'), format(Hard[3][0], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[3][1], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[3][2], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[3][3], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[3][4], ' ^1'), format(']', ' ^1'), format('', ' ^1'), sep='')
    print(format('E ', ' ^1'), format('[', ' ^1'), format(Hard[4][0], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[4][1], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[4][2], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[4][3], ' ^1'), format(']', ' ^1'), format('', ' ^1'), format('[', ' ^1'), format(Hard[4][4], ' ^1'), format(']', ' ^1'), format('', ' ^1'), sep='')

#Row Function
def row_change(row):
    if row == "A" or row == "a":
        row = 0
    elif row == "B" or row == "b":
        row = 1
    elif row == "C" or row == "c":
        row = 2
    elif row == "D" or row == "d":
        row = 3
    elif row == "E" or row == "e":
        row = 4
    return row

#Treasure function
def Treasure_easy_finder(row,column):
    print("")
    if hidden_easy[row][column-1] == chr(9818):
        Easy[row][column-1] = chr(9818)
        print("You got one!")
    elif hidden_easy[row][column-1] == "X":
        print("You loser, you already guessed that!")
    elif hidden_easy[row][column-1] == "O":
        Easy[row][column-1] = "X"
        hidden_easy[row][column-1] = "X"
        print("You didnt find one, guess again")

def Treasure_medium_finder(row,column):
    print("")
    if hidden_medium[row][column-1] == chr(9818):
        Medium[row][column-1] = chr(9818)
        print("You got one!")
    elif hidden_medium[row][column-1] == "X":
        print("You loser, you already guessed that!")
    elif hidden_medium[row][column-1] == "O":
        Medium[row][column-1] = "X"
        hidden_medium[row][column-1] = "X"
        print("You didnt find one, guess again")

def Treasure_hard_finder(row,column):
    print("")
    if hidden_hard[row][column-1] == chr(9818):
        Hard[row][column-1] = chr(9818)
        print("You got one!")
    elif hidden_hard[row][column-1] == "X":
        print("You loser, you already guessed that!")
    elif hidden_hard[row][column-1] == "O":
        Hard[row][column-1] = "X"
        hidden_hard[row][column-1] = "X"
        print("You didnt find one, guess again")
        
#Main Function   
def main():
    diff = str(input("Enter if you want an 'easy' 'medium' or 'hard'\ndifficulty or enter 'Done' when finished. "))
    print("")
    if diff == "easy":
        for l in range (6):
            EASY()
            row = str(input("Enter which row you would like to pick from "))
            column = int(input("Enter which column you would like to pick from "))
            row = row_change(row)
            Treasure_easy_finder(row,column)
        EASY()
        print("Game Over!")
            
    elif diff == "medium":
        for l in range (10):
            MEDIUM()
            row = str(input("Enter which row you would like to pick from "))
            column = int(input("Enter which column you would like to pick from "))
            row = row_change(row)
            Treasure_medium_finder(row,column)
        MEDIUM()
        print("Game Over!")
    elif diff == "hard":
        for l in range (15):
            HARD()
            row = str(input("Enter which row you would like to pick from "))
            column = int(input("Enter which column you would like to pick from "))
            row = row_change(row)
            Treasure_hard_finder(row,column)
        HARD()
        print("Game Over!")
            
    elif diff == "Done":
               print("Thanks for Playing Treasure Hunt")
    elif diff != "easy" or "medium" or "hard" or "Done":
               print("Try again")
               main()

    
        
#Lists
Easy=[["O","O","O"],["O","O","O"],["O","O","O"]]

Medium=[["O","O","O","O"],["O","O","O","O"],["O","O","O","O"],["O","O","O","O"]]

Hard=[["O","O","O","O","O"],["O","O","O","O","O"],["O","O","O","O","O"],["O","O","O","O","O"],["O","O","O","O","O"]]


main()

